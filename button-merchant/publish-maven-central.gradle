/*
 * publish-maven-central.gradle
 *
 * Copyright (c) 2021 Button, Inc. (https://usebutton.com)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */

apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka'

group = 'com.usebutton.merchant'
version = libraryVersionName

dokkaHtml.configure {
    outputDirectory.set(file("$buildDir/docs/html"))
    dokkaSourceSets {
        named("main") {
            moduleName.set("Button Merchant Library")
            includeNonPublic.set(false)
            skipEmptyPackages.set(true)
            skipDeprecated.set(true)
            reportUndocumented.set(false)
            suppressInheritedMembers.set(true)
            documentedVisibilities.set([Visibility.PUBLIC])
        }
    }
}

dokkaJavadoc.configure {
    outputDirectory.set(file("$buildDir/docs/javadoc"))
    dokkaSourceSets {
        named("main") {
            moduleName.set("Button Merchant Library")
            includeNonPublic.set(false)
            skipEmptyPackages.set(true)
            skipDeprecated.set(true)
            reportUndocumented.set(false)
            suppressInheritedMembers.set(true)
            documentedVisibilities.set([Visibility.PUBLIC])
        }
    }
}

task androidHtmlDocs() {
    dependsOn(dokkaHtml)
}

tasks.register('dokkaHtmlJar', Jar.class) {
    dependsOn(dokkaHtml)
    from(dokkaHtml)
    archiveClassifier.set("html-docs")
}

tasks.register('androidJavadocsJar', Jar.class) {
    dependsOn(dokkaJavadoc)
    from(dokkaJavadoc)
    archiveClassifier.set("javadoc")
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        from android.sourceSets.main.java.srcDirs
    } else {
        from sourceSets.main.java.srcDirs
    }
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

afterEvaluate {
    publishing {
        repositories {
            maven {
                def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
                def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
                url = version.contains('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                name = "sonatype"

                credentials(PasswordCredentials) {
                    username = NEXUS_USERNAME
                    password = NEXUS_PASSWORD
                }
            }
        }

        publications {
            release(MavenPublication) {
                groupId group
                artifactId 'button-merchant'
                version version

                artifact("$buildDir/outputs/aar/${artifactId}-release.aar")
                artifact androidSourcesJar
                artifact androidJavadocsJar

                pom {
                    name = 'Button Android Merchant Library'
                    description = "Button Merchant Library for Android v${libraryVersionName}"
                    url = 'http://www.usebutton.com/'
                    packaging = 'aar'
                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'https://raw.githubusercontent.com/button/button-merchant-android/master/LICENSE'
                            distribution = 'repo'
                        }
                    }
                    developers {
                        developer {
                            id = 'button'
                            name = 'Button'
                            email = 'integration-support@usebutton.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:github.com/button/button-merchant-android.git'
                        developerConnection = 'scm:git:ssh://git@github.com:button/button-merchant-android.git'
                        url = 'https://github.com/button/button-merchant-android'
                    }
                    withXml {
                        def dependenciesNode = asNode().appendNode('dependencies')
                        project.configurations.implementation.allDependencies.each {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                            dependencyNode.appendNode('scope', 'runtime')
                        }
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications
}
